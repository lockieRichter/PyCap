{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome everyone to PyCap! \u00a4 The new and growing community of Python enthusiasts and professionals across Capgemini. Info We are running the first course of 2021: Introduction to Python This course will serve as an introduction to Python and an opportunity for everyone to dip their toes into programming. This course will provide you with the knowledge to begin using Python on project or for your own personal projects. We hope you will enjoy your stay with us and be part of this growing community. var news = document.getElementById('news') if (new Date() < new Date(news.getAttribute('end_date'))) { news.style.display = 'block' } Get to know Python \u00a4 Python is a popular and is an easy to learn, powerful programming language. It is used for many things, such as: Software Development Web Application Scripting AI and Machine Learning As you can see, lots of cool and interesting things to build Getting Started \u00a4 Instant development environment \u00a4 We will be using repl.it for this course. It is an online development playground that let you start without any of the hassels to setup. Trust me, I wish I know about it when I was learning Python. To immediately get access to a development environment click here , this should set you up with a repl.it IDE in your browser with all the code in this course. It should look very similar to the below image. Working locally \u00a4 If you are a little bit brave and interested in working locally on your laptop, you can set up the development environment with the programs listed below First ensure you have git , VSCode and Python (3.6+) installed, open up your terminal/command prompt and run the following Python (Ensure you download Python 3.6+) VSCode Git Now you're ready to clone the PyCap repo and open it in vscode git clone https://github.com/CapgeminiInventIDE/PyCap.git code PyCap","title":"Welcome"},{"location":"#welcome-everyone-to-pycap","text":"The new and growing community of Python enthusiasts and professionals across Capgemini. Info We are running the first course of 2021: Introduction to Python This course will serve as an introduction to Python and an opportunity for everyone to dip their toes into programming. This course will provide you with the knowledge to begin using Python on project or for your own personal projects. We hope you will enjoy your stay with us and be part of this growing community. var news = document.getElementById('news') if (new Date() < new Date(news.getAttribute('end_date'))) { news.style.display = 'block' }","title":"Welcome everyone to PyCap!"},{"location":"#get-to-know-python","text":"Python is a popular and is an easy to learn, powerful programming language. It is used for many things, such as: Software Development Web Application Scripting AI and Machine Learning As you can see, lots of cool and interesting things to build","title":"Get to know Python"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#instant-development-environment","text":"We will be using repl.it for this course. It is an online development playground that let you start without any of the hassels to setup. Trust me, I wish I know about it when I was learning Python. To immediately get access to a development environment click here , this should set you up with a repl.it IDE in your browser with all the code in this course. It should look very similar to the below image.","title":"Instant development environment"},{"location":"#working-locally","text":"If you are a little bit brave and interested in working locally on your laptop, you can set up the development environment with the programs listed below First ensure you have git , VSCode and Python (3.6+) installed, open up your terminal/command prompt and run the following Python (Ensure you download Python 3.6+) VSCode Git Now you're ready to clone the PyCap repo and open it in vscode git clone https://github.com/CapgeminiInventIDE/PyCap.git code PyCap","title":"Working locally"},{"location":"about_us/","text":"About Us \u00a4 Capgemini Invent combines strategy, technology, data science and creative design to solve the most complex business and technology challenges. \u00a4 Disruption is not new, but the pace of change is. The fourth industrial revolution is forcing businesses to rethink everything they know. Leading organizations behave as living entities, constantly adapting to change. With invention at their core, they continuously redesign their business to generate new sources of value. Winning is about fostering inventive thinking to create what comes next. Invent. Build. Transform. \u00a4 This is why we have created Capgemini Invent, Capgemini\u2019s new digital innovation, consulting and transformation global business line. Our multi-disciplinary team helps business leaders find new sources of value. We accelerate the process of turning ideas into prototypes and scalable real-world solutions; leveraging the full business and technology expertise of the Capgemini Group to implement at speed and scale. The result is a coordinated approach to transformation, enabling businesses to create the products, services, customer experiences, and business models of the future. We're Hiring! \u00a4 Do you want to be part of the team that builds doc_loader and other great products at Capgemini Invent? If so, you're in luck! Capgemini Invent is currently hiring Data Scientists who love using data to drive their decisions. Take a look at our open positions and see if you're a fit.","title":"About Us"},{"location":"about_us/#about-us","text":"","title":"About Us"},{"location":"about_us/#capgemini-invent-combines-strategy-technology-data-science-and-creative-design-to-solve-the-most-complex-business-and-technology-challenges","text":"Disruption is not new, but the pace of change is. The fourth industrial revolution is forcing businesses to rethink everything they know. Leading organizations behave as living entities, constantly adapting to change. With invention at their core, they continuously redesign their business to generate new sources of value. Winning is about fostering inventive thinking to create what comes next.","title":"Capgemini Invent combines strategy, technology, data science and creative design to solve the most complex business and technology challenges."},{"location":"about_us/#invent-build-transform","text":"This is why we have created Capgemini Invent, Capgemini\u2019s new digital innovation, consulting and transformation global business line. Our multi-disciplinary team helps business leaders find new sources of value. We accelerate the process of turning ideas into prototypes and scalable real-world solutions; leveraging the full business and technology expertise of the Capgemini Group to implement at speed and scale. The result is a coordinated approach to transformation, enabling businesses to create the products, services, customer experiences, and business models of the future.","title":"Invent. Build. Transform."},{"location":"about_us/#were-hiring","text":"Do you want to be part of the team that builds doc_loader and other great products at Capgemini Invent? If so, you're in luck! Capgemini Invent is currently hiring Data Scientists who love using data to drive their decisions. Take a look at our open positions and see if you're a fit.","title":"We're Hiring!"},{"location":"certified/","text":"Certified Members \u00a4 Introduction to Python \u00a4 Tim Sanderson Certificate: View my certificate on Badgr! Capstone: View my capstone on Github!","title":"Certified Members"},{"location":"certified/#certified-members","text":"","title":"Certified Members"},{"location":"certified/#introduction-to-python","text":"Tim Sanderson Certificate: View my certificate on Badgr! Capstone: View my capstone on Github!","title":"Introduction to Python"},{"location":"changelog/","text":"Changelog \u00a4 All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"changelog/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"code_of_conduct/","text":"Contributor Covenant Code of Conduct \u00a4 Our Pledge \u00a4 In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards \u00a4 Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities \u00a4 Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope \u00a4 This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement \u00a4 Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at andy.challis@capgemini.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution \u00a4 This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Code of Conduct"},{"location":"code_of_conduct/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"code_of_conduct/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"code_of_conduct/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"code_of_conduct/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"code_of_conduct/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"code_of_conduct/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at andy.challis@capgemini.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"code_of_conduct/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Attribution"},{"location":"contributing/","text":"Contributing \u00a4 Become a Mentor \u00a4 Mentors are required to guide students in their PyCap courses. This typically involves answering questions about Python or the course material, helping debug Python code, designing and assessing CapStone projects, and contributing to the course material. As such, mentors should have mastered the basics of Python programming and be able to build functional code for a wide range of mid-level complexity problems. You can request to become a mentor for the next PyCap course if you believe you meet the above requirements. Speak on a Special Topic \u00a4 If there is a Python-based topic that you are familiar with and are passionate about, and that you believe would be interesting or helpful to the class attendees, you can request to host a class on the topic as part of our Special Topics series. These classes are aimed at people who have completed the Introduction to Python course. Write course content \u00a4 You can request to contribute course content for additional topics that are not already covered in the courses. Other contributions \u00a4 If you would like to make any other contributions to the PyCap materials (for example, to correct typos), you may do so by submitting a pull request to the PyCap repository : Fork the repository Create a branch in your own fork: git checkout -b <branch_name> . Make your changes and commit them: git commit -m '<commit_message>' Push to the original branch: git push origin <project_name>/<location> Create the pull request back to our fork. If you would like to become a mentor, speak on a special topic or write course content, send a request to Andy Challis at andy.challis@capgemini.com .","title":"Contributing"},{"location":"contributing/#contributing","text":"","title":"Contributing"},{"location":"contributing/#become-a-mentor","text":"Mentors are required to guide students in their PyCap courses. This typically involves answering questions about Python or the course material, helping debug Python code, designing and assessing CapStone projects, and contributing to the course material. As such, mentors should have mastered the basics of Python programming and be able to build functional code for a wide range of mid-level complexity problems. You can request to become a mentor for the next PyCap course if you believe you meet the above requirements.","title":"Become a Mentor"},{"location":"contributing/#speak-on-a-special-topic","text":"If there is a Python-based topic that you are familiar with and are passionate about, and that you believe would be interesting or helpful to the class attendees, you can request to host a class on the topic as part of our Special Topics series. These classes are aimed at people who have completed the Introduction to Python course.","title":"Speak on a Special Topic"},{"location":"contributing/#write-course-content","text":"You can request to contribute course content for additional topics that are not already covered in the courses.","title":"Write course content"},{"location":"contributing/#other-contributions","text":"If you would like to make any other contributions to the PyCap materials (for example, to correct typos), you may do so by submitting a pull request to the PyCap repository : Fork the repository Create a branch in your own fork: git checkout -b <branch_name> . Make your changes and commit them: git commit -m '<commit_message>' Push to the original branch: git push origin <project_name>/<location> Create the pull request back to our fork. If you would like to become a mentor, speak on a special topic or write course content, send a request to Andy Challis at andy.challis@capgemini.com .","title":"Other contributions"},{"location":"license/","text":"Mozilla Public License Version 2.0 \u00a4 Copyright (c) 2020, Capgemini Invent IDE All rights reserved. 1. Definitions \u00a4 1.1. \"Contributor\" means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software. 1.2. \"Contributor Version\" means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor's Contribution. 1.3. \"Contribution\" means Covered Software of a particular Contributor. 1.4. \"Covered Software\" means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof. 1.5. \"Incompatible With Secondary Licenses\" means (a) that the initial Contributor has attached the notice described in Exhibit B to the Covered Software; or (b) that the Covered Software was made available under the terms of version 1.1 or earlier of the License, but not also under the terms of a Secondary License. 1.6. \"Executable Form\" means any form of the work other than Source Code Form. 1.7. \"Larger Work\" means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software. 1.8. \"License\" means this document. 1.9. \"Licensable\" means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License. 1.10. \"Modifications\" means any of the following: (a) any file in Source Code Form that results from an addition to, deletion from, or modification of the contents of Covered Software; or (b) any new file in Source Code Form that contains any Covered Software. 1.11. \"Patent Claims\" of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version. 1.12. \"Secondary License\" means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses. 1.13. \"Source Code Form\" means the form of the work preferred for making modifications. 1.14. \"You\" (or \"Your\") means an individual or a legal entity exercising rights under this License. For legal entities, \"You\" includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, \"control\" means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity. 2. License Grants and Conditions \u00a4 2.1. Grants Each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license: (a) under intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and (b) under Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version. 2.2. Effective Date The licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution. 2.3. Limitations on Grant Scope The licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor: (a) for any code that a Contributor has removed from Covered Software; or (b) for infringements caused by: (i) Your and any other third party's modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or (c) under Patent Claims infringed by Covered Software in the absence of its Contributions. This License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4). 2.4. Subsequent Licenses No Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3). 2.5. Representation Each Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License. 2.6. Fair Use This License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents. 2.7. Conditions Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1. 3. Responsibilities \u00a4 3.1. Distribution of Source Form All distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients' rights in the Source Code Form. 3.2. Distribution of Executable Form If You distribute Covered Software in Executable Form then: (a) such Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and (b) You may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients' rights in the Source Code Form under this License. 3.3. Distribution of a Larger Work You may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s). 3.4. Notices You may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies. 3.5. Application of Additional Terms You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction. 4. Inability to Comply Due to Statute or Regulation \u00a4 If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it. 5. Termination \u00a4 5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice. 5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate. 5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination. * Disclaimer of Warranty * ------------------------- * * Covered Software is provided under this License on an \"as is\" * basis, without warranty of any kind, either expressed, implied, or * statutory, including, without limitation, warranties that the * Covered Software is free of defects, merchantable, fit for a * particular purpose or non-infringing. The entire risk as to the * quality and performance of the Covered Software is with You. * Should any Covered Software prove defective in any respect, You * (not any Contributor) assume the cost of any necessary servicing, * repair, or correction. This disclaimer of warranty constitutes an * essential part of this License. No use of any Covered Software is * authorized under this License except under this disclaimer. * * * Limitation of Liability * -------------------------- * * Under no circumstances and under no legal theory, whether tort * (including negligence), contract, or otherwise, shall any * Contributor, or anyone who distributes Covered Software as * permitted above, be liable to You for any direct, indirect, * special, incidental, or consequential damages of any character * including, without limitation, damages for lost profits, loss of * goodwill, work stoppage, computer failure or malfunction, or any * and all other commercial damages or losses, even if such party * shall have been informed of the possibility of such damages. This * limitation of liability shall not apply to liability for death or * personal injury resulting from such party's negligence to the * extent applicable law prohibits such limitation. Some * jurisdictions do not allow the exclusion or limitation of * incidental or consequential damages, so this exclusion and * limitation may not apply to You. * * 8. Litigation \u00a4 Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party's ability to bring cross-claims or counter-claims. 9. Miscellaneous \u00a4 This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor. 10. Versions of the License \u00a4 10.1. New Versions Mozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number. 10.2. Effect of New Versions You may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward. 10.3. Modified Versions If you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License). 10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses If You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached. Exhibit A - Source Code Form License Notice \u00a4 This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/. If it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice. You may add additional accurate notices of copyright ownership. Exhibit B - \"Incompatible With Secondary Licenses\" Notice \u00a4 This Source Code Form is \"Incompatible With Secondary Licenses\", as defined by the Mozilla Public License, v. 2.0.","title":"License"},{"location":"license/#mozilla-public-license-version-20","text":"Copyright (c) 2020, Capgemini Invent IDE All rights reserved.","title":"Mozilla Public License Version 2.0"},{"location":"license/#1-definitions","text":"1.1. \"Contributor\" means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software. 1.2. \"Contributor Version\" means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor's Contribution. 1.3. \"Contribution\" means Covered Software of a particular Contributor. 1.4. \"Covered Software\" means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof. 1.5. \"Incompatible With Secondary Licenses\" means (a) that the initial Contributor has attached the notice described in Exhibit B to the Covered Software; or (b) that the Covered Software was made available under the terms of version 1.1 or earlier of the License, but not also under the terms of a Secondary License. 1.6. \"Executable Form\" means any form of the work other than Source Code Form. 1.7. \"Larger Work\" means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software. 1.8. \"License\" means this document. 1.9. \"Licensable\" means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License. 1.10. \"Modifications\" means any of the following: (a) any file in Source Code Form that results from an addition to, deletion from, or modification of the contents of Covered Software; or (b) any new file in Source Code Form that contains any Covered Software. 1.11. \"Patent Claims\" of a Contributor means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version. 1.12. \"Secondary License\" means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses. 1.13. \"Source Code Form\" means the form of the work preferred for making modifications. 1.14. \"You\" (or \"Your\") means an individual or a legal entity exercising rights under this License. For legal entities, \"You\" includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, \"control\" means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.","title":"1. Definitions"},{"location":"license/#2-license-grants-and-conditions","text":"2.1. Grants Each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license: (a) under intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and (b) under Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version. 2.2. Effective Date The licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution. 2.3. Limitations on Grant Scope The licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor: (a) for any code that a Contributor has removed from Covered Software; or (b) for infringements caused by: (i) Your and any other third party's modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or (c) under Patent Claims infringed by Covered Software in the absence of its Contributions. This License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4). 2.4. Subsequent Licenses No Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3). 2.5. Representation Each Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License. 2.6. Fair Use This License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents. 2.7. Conditions Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.","title":"2. License Grants and Conditions"},{"location":"license/#3-responsibilities","text":"3.1. Distribution of Source Form All distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients' rights in the Source Code Form. 3.2. Distribution of Executable Form If You distribute Covered Software in Executable Form then: (a) such Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and (b) You may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients' rights in the Source Code Form under this License. 3.3. Distribution of a Larger Work You may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s). 3.4. Notices You may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies. 3.5. Application of Additional Terms You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.","title":"3. Responsibilities"},{"location":"license/#4-inability-to-comply-due-to-statute-or-regulation","text":"If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.","title":"4. Inability to Comply Due to Statute or Regulation"},{"location":"license/#5-termination","text":"5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice. 5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate. 5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination. * Disclaimer of Warranty * ------------------------- * * Covered Software is provided under this License on an \"as is\" * basis, without warranty of any kind, either expressed, implied, or * statutory, including, without limitation, warranties that the * Covered Software is free of defects, merchantable, fit for a * particular purpose or non-infringing. The entire risk as to the * quality and performance of the Covered Software is with You. * Should any Covered Software prove defective in any respect, You * (not any Contributor) assume the cost of any necessary servicing, * repair, or correction. This disclaimer of warranty constitutes an * essential part of this License. No use of any Covered Software is * authorized under this License except under this disclaimer. * * * Limitation of Liability * -------------------------- * * Under no circumstances and under no legal theory, whether tort * (including negligence), contract, or otherwise, shall any * Contributor, or anyone who distributes Covered Software as * permitted above, be liable to You for any direct, indirect, * special, incidental, or consequential damages of any character * including, without limitation, damages for lost profits, loss of * goodwill, work stoppage, computer failure or malfunction, or any * and all other commercial damages or losses, even if such party * shall have been informed of the possibility of such damages. This * limitation of liability shall not apply to liability for death or * personal injury resulting from such party's negligence to the * extent applicable law prohibits such limitation. Some * jurisdictions do not allow the exclusion or limitation of * incidental or consequential damages, so this exclusion and * limitation may not apply to You. * *","title":"5. Termination"},{"location":"license/#8-litigation","text":"Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party's ability to bring cross-claims or counter-claims.","title":"8. Litigation"},{"location":"license/#9-miscellaneous","text":"This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.","title":"9. Miscellaneous"},{"location":"license/#10-versions-of-the-license","text":"10.1. New Versions Mozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number. 10.2. Effect of New Versions You may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward. 10.3. Modified Versions If you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License). 10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses If You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.","title":"10. Versions of the License"},{"location":"license/#exhibit-a-source-code-form-license-notice","text":"This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/. If it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice. You may add additional accurate notices of copyright ownership.","title":"Exhibit A - Source Code Form License Notice"},{"location":"license/#exhibit-b-incompatible-with-secondary-licenses-notice","text":"This Source Code Form is \"Incompatible With Secondary Licenses\", as defined by the Mozilla Public License, v. 2.0.","title":"Exhibit B - \"Incompatible With Secondary Licenses\" Notice"},{"location":"mentors/","text":"Our Mentors \u00a4 Andy Challis Andy is a full stack data scientist, having experience in technologies such as AWS/GCP, React/Frontend, Docker/Kubernetes, Python/Javascript/Go/Swift and many libraries within such as PyTorch/Flask/FastAPI/Pandas/SkLearn. He drives rapid innovation of projects for clients by leveraging data assets and data science techniques and is the lead for the Capgemini Australia Python Community 2019-2021 Courses intro-to-python/course-1 intro-to-python/course-2 Tim Sanderson Tim is a data scientist whose primary experience lies with python, docker, MLFlow and python libraries like FastAPI, Pandas and Pytorch. He enjoys bringing data, code and people together to drive unique solutions Courses intro-to-python/course-1 Eromanga Adermann Ero is a Consultant within the Invent-IDE capability. She has a strong technical problem-solving background from her doctorate degree in physics, where she studied dark energy and found new ways to uncover its properties. She also has experience building innovative solutions to real-world problems, through her participation in GovHacks 2019 and the ACS Hackathon 2020 (both of which she won awards for). She has developed scripts to automate the distribution of employee dashboards, process and restructure employee data, and is currently part of the team building an AI document processing ecosystem for the Federal Government. Courses intro-to-python/course-1 Palang Anivan Palang has a background in Software Engineering and is passionate about everything technology. Always down for some good old hackathons, keeping things exciting and try to look for a new way to apply new innovation to existing problems or learn about new-leading edge technology, specifically in emerging technology or anything cool really :D. Courses intro-to-python/course-1 Nima Namjouyan A Data scientist passionate about Python, image processing and computer vision. Love topics in image/doc classification and multiprocessing. Courses intro-to-python/course-1","title":"Mentors"},{"location":"mentors/#our-mentors","text":"Andy Challis Andy is a full stack data scientist, having experience in technologies such as AWS/GCP, React/Frontend, Docker/Kubernetes, Python/Javascript/Go/Swift and many libraries within such as PyTorch/Flask/FastAPI/Pandas/SkLearn. He drives rapid innovation of projects for clients by leveraging data assets and data science techniques and is the lead for the Capgemini Australia Python Community 2019-2021 Courses intro-to-python/course-1 intro-to-python/course-2 Tim Sanderson Tim is a data scientist whose primary experience lies with python, docker, MLFlow and python libraries like FastAPI, Pandas and Pytorch. He enjoys bringing data, code and people together to drive unique solutions Courses intro-to-python/course-1 Eromanga Adermann Ero is a Consultant within the Invent-IDE capability. She has a strong technical problem-solving background from her doctorate degree in physics, where she studied dark energy and found new ways to uncover its properties. She also has experience building innovative solutions to real-world problems, through her participation in GovHacks 2019 and the ACS Hackathon 2020 (both of which she won awards for). She has developed scripts to automate the distribution of employee dashboards, process and restructure employee data, and is currently part of the team building an AI document processing ecosystem for the Federal Government. Courses intro-to-python/course-1 Palang Anivan Palang has a background in Software Engineering and is passionate about everything technology. Always down for some good old hackathons, keeping things exciting and try to look for a new way to apply new innovation to existing problems or learn about new-leading edge technology, specifically in emerging technology or anything cool really :D. Courses intro-to-python/course-1 Nima Namjouyan A Data scientist passionate about Python, image processing and computer vision. Love topics in image/doc classification and multiprocessing. Courses intro-to-python/course-1","title":"Our Mentors"},{"location":"advanced-python/course-1/","text":"","title":"Course 1"},{"location":"intro-to-python/course-1/","text":"Python Fundamentals \u00a4 Key Info Created date 02/02/2021 Previous knowledge None What you will learn Python syntax and semantics Best coding practices Problem solving using python Mentors Learning resources Coursera follow along course (Weeks 1, 2, 3) Coursera follow along course (Weeks 1, 2, 3) Problem Name Description \u00a4 This course aims to teach everyone the basics and best practices of python programming. These concepts together will form the tools to allow you to solve programming problems using python and write your own programs with a high standard. There are links to courses and materials to help you in your journey of mastering python as well as problems to test your understanding and hone your practical knowledge.","title":"Course 1"},{"location":"intro-to-python/course-1/#python-fundamentals","text":"Key Info Created date 02/02/2021 Previous knowledge None What you will learn Python syntax and semantics Best coding practices Problem solving using python Mentors Learning resources Coursera follow along course (Weeks 1, 2, 3) Coursera follow along course (Weeks 1, 2, 3) Problem Name","title":"Python Fundamentals"},{"location":"intro-to-python/course-1/#description","text":"This course aims to teach everyone the basics and best practices of python programming. These concepts together will form the tools to allow you to solve programming problems using python and write your own programs with a high standard. There are links to courses and materials to help you in your journey of mastering python as well as problems to test your understanding and hone your practical knowledge.","title":"Description"},{"location":"intro-to-python/course-2/","text":"Data Structures \u00a4 Key Info Created date 02/02/2021 None required Mentor Learning resource Coursera follow along course (Weeks 1, 2, 3) Description \u00a4 None","title":"Course 2"},{"location":"intro-to-python/course-2/#data-structures","text":"Key Info Created date 02/02/2021 None required Mentor Learning resource Coursera follow along course (Weeks 1, 2, 3)","title":"Data Structures"},{"location":"intro-to-python/course-2/#description","text":"None","title":"Description"},{"location":"intro-to-python/summary/","text":"Course: Introduction to Python \u00a4 Come and join the Capgemini Python community! PyCap Start date: 9th March 2021 12:30 AEST Instructors: Andy Challis & Tim Sanderson Applicant limit: 50 Prerequisites: None - just an interest to learn new things L&D hours: 7.5, plus up to 12.5 additional hours for capstone completion Note: PyCap will be hosting another intro to Python course later in the year for those who cannot attend or if we are at capacity. Description \u00a4 This course aims to provide you with the knowledge to begin using Python on a project or for your own personal projects. We will delve into the history of programming and explain why it is best to design software in a certain way. The course will also include on-project experience from a variety of different backgrounds, with use cases from across the broader Capgemini group. Course structure \u00a4 The course will run for 5 weeks starting at (9th March 2021 12:30 AEST). Along with the course content in the sessions we will add in recommended follow along self paced learning. There will be a final capstone project at the end with a 2 week deadline for submissions. Mentors will be available for any questions through Teams and will have dedicated times for drop in sessions. Content \u00a4 We will cover Python concepts like: Getting Python installed Data structures Control flow Functional programming OOP (object oriented programming) Building commandline applications Development tools (linting, testing, formatting) Type hinting Modern python functionality (3.6+) Webscraping Using external libraries Next steps \u00a4 PyCap will be hosting a Python mini series later in the year with a more specific focus on topics such as: Advanced Python concepts and building your own Python package Working with databases Scaling Python applications - async, muti-threading/processing and containerization Building and deploying API's into production Advanced unit testing Deploying Deep Learning models Training and Deploying Classical Machine Learning models Advanced webscraping - getting past bot detection, password walls, etc Principles of programming Interactive data visualization Introduction to pandas and data analysis Advanced networking - working with websockets, apis, queues","title":"Summary"},{"location":"intro-to-python/summary/#course-introduction-to-python","text":"Come and join the Capgemini Python community! PyCap Start date: 9th March 2021 12:30 AEST Instructors: Andy Challis & Tim Sanderson Applicant limit: 50 Prerequisites: None - just an interest to learn new things L&D hours: 7.5, plus up to 12.5 additional hours for capstone completion Note: PyCap will be hosting another intro to Python course later in the year for those who cannot attend or if we are at capacity.","title":"Course: Introduction to Python"},{"location":"intro-to-python/summary/#description","text":"This course aims to provide you with the knowledge to begin using Python on a project or for your own personal projects. We will delve into the history of programming and explain why it is best to design software in a certain way. The course will also include on-project experience from a variety of different backgrounds, with use cases from across the broader Capgemini group.","title":"Description"},{"location":"intro-to-python/summary/#course-structure","text":"The course will run for 5 weeks starting at (9th March 2021 12:30 AEST). Along with the course content in the sessions we will add in recommended follow along self paced learning. There will be a final capstone project at the end with a 2 week deadline for submissions. Mentors will be available for any questions through Teams and will have dedicated times for drop in sessions.","title":"Course structure"},{"location":"intro-to-python/summary/#content","text":"We will cover Python concepts like: Getting Python installed Data structures Control flow Functional programming OOP (object oriented programming) Building commandline applications Development tools (linting, testing, formatting) Type hinting Modern python functionality (3.6+) Webscraping Using external libraries","title":"Content"},{"location":"intro-to-python/summary/#next-steps","text":"PyCap will be hosting a Python mini series later in the year with a more specific focus on topics such as: Advanced Python concepts and building your own Python package Working with databases Scaling Python applications - async, muti-threading/processing and containerization Building and deploying API's into production Advanced unit testing Deploying Deep Learning models Training and Deploying Classical Machine Learning models Advanced webscraping - getting past bot detection, password walls, etc Principles of programming Interactive data visualization Introduction to pandas and data analysis Advanced networking - working with websockets, apis, queues","title":"Next steps"},{"location":"intro-to-python/capstone/board_game/","text":"Application - \ud83c\udfb2 Board games \u00a4 Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code Description \u00a4 None","title":"Board game emulation"},{"location":"intro-to-python/capstone/board_game/#application-board-games","text":"Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code","title":"Application - \ud83c\udfb2 Board games"},{"location":"intro-to-python/capstone/board_game/#description","text":"None","title":"Description"},{"location":"intro-to-python/capstone/external_apis/","text":"Application - \ud83d\udc69\u200d\ud83d\udcbb External API's \u00a4 Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code Description \u00a4 None","title":"Interacting with external API's"},{"location":"intro-to-python/capstone/external_apis/#application-external-apis","text":"Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code","title":"Application - \ud83d\udc69\u200d\ud83d\udcbb External API's"},{"location":"intro-to-python/capstone/external_apis/#description","text":"None","title":"Description"},{"location":"intro-to-python/capstone/intro/","text":"Intro to Python Capstone Projects \u00a4 Add in info here on the process, mentors etc Capstone Project Options \u00a4 Board game emulation Interacting with external API's Encryption and secrets manager Building a TODO list Scraping the web for data","title":"Introduction"},{"location":"intro-to-python/capstone/intro/#intro-to-python-capstone-projects","text":"Add in info here on the process, mentors etc","title":"Intro to Python Capstone Projects"},{"location":"intro-to-python/capstone/intro/#capstone-project-options","text":"Board game emulation Interacting with external API's Encryption and secrets manager Building a TODO list Scraping the web for data","title":"Capstone Project Options"},{"location":"intro-to-python/capstone/secrets/","text":"Application - \ud83e\udd10 Secrets \u00a4 Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code Description \u00a4 None","title":"Encryption and secrets manager"},{"location":"intro-to-python/capstone/secrets/#application-secrets","text":"Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code","title":"Application - \ud83e\udd10 Secrets"},{"location":"intro-to-python/capstone/secrets/#description","text":"None","title":"Description"},{"location":"intro-to-python/capstone/todo_list/","text":"Application - \ud83d\udcdd Todo list \u00a4 Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code Description \u00a4 None Problem \u00a4 Create a commandline application using Python 3.6+ that allows you to build and maintain a TODO list. Your code should be well documented with a docstrings, comments and a README describing how your program works, unit tests to ensure it works as expected, type annotations to allow other developers to understand how to help build upon your program and finally well formatted code (using Black). You should add a summary to your README that includes the next steps (dot points) and also the strengths and weaknesses of your program in its current state. A list of operations that your should support, as well as how we expect them to be called can be found in the table below. A TODO item should have at least a description, id and completion state Operation Usage Required Create a todo python todo_list.py create \"Take the washing out\" TRUE Create multiple todos python todo.py create \"Take the washing out\" \"Walk the dog\" TRUE Read (list) all todos python todo.py list-all TRUE Read (list) all todos that contain a given substring python todo.py list-all --substring \"dog\" TRUE Read (list) all todos that are complete python todo.py list-all --complete \"dog\" TRUE Read (list) all todos that are not complete python todo.py list --no-complete \"dog\" TRUE Update a todo description python todo.py toggle \"f7f6d502-dc35-40d2-b348-287a714b6978\" TRUE Update the state of a todo python todo.py update \"f7f6d502-dc35-40d2-b348-287a714b6978\" \"Walk all the dogs\" TRUE Delete a todo python todo.py delete \"f7f6d502-dc35-40d2-b348-287a714b6978\" TRUE Delete multiple todos python todo.py delete \"f7f6d502-dc35-40d2-b348-287a714b6978\" \"2be6199a-abec-42c8-8744-255cbb152d9c\" TRUE Delete all todos python todo.py delete-all TRUE Optional Extras \u00a4 Expand to multiple lists Have multiple states for a todo list - think something like a jira board Visualize the todo list using ascii art Use different colors for the completion state of the todo ... Use your imagination","title":"Building a TODO list"},{"location":"intro-to-python/capstone/todo_list/#application-todo-list","text":"Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code","title":"Application - \ud83d\udcdd Todo list"},{"location":"intro-to-python/capstone/todo_list/#description","text":"None","title":"Description"},{"location":"intro-to-python/capstone/todo_list/#problem","text":"Create a commandline application using Python 3.6+ that allows you to build and maintain a TODO list. Your code should be well documented with a docstrings, comments and a README describing how your program works, unit tests to ensure it works as expected, type annotations to allow other developers to understand how to help build upon your program and finally well formatted code (using Black). You should add a summary to your README that includes the next steps (dot points) and also the strengths and weaknesses of your program in its current state. A list of operations that your should support, as well as how we expect them to be called can be found in the table below. A TODO item should have at least a description, id and completion state Operation Usage Required Create a todo python todo_list.py create \"Take the washing out\" TRUE Create multiple todos python todo.py create \"Take the washing out\" \"Walk the dog\" TRUE Read (list) all todos python todo.py list-all TRUE Read (list) all todos that contain a given substring python todo.py list-all --substring \"dog\" TRUE Read (list) all todos that are complete python todo.py list-all --complete \"dog\" TRUE Read (list) all todos that are not complete python todo.py list --no-complete \"dog\" TRUE Update a todo description python todo.py toggle \"f7f6d502-dc35-40d2-b348-287a714b6978\" TRUE Update the state of a todo python todo.py update \"f7f6d502-dc35-40d2-b348-287a714b6978\" \"Walk all the dogs\" TRUE Delete a todo python todo.py delete \"f7f6d502-dc35-40d2-b348-287a714b6978\" TRUE Delete multiple todos python todo.py delete \"f7f6d502-dc35-40d2-b348-287a714b6978\" \"2be6199a-abec-42c8-8744-255cbb152d9c\" TRUE Delete all todos python todo.py delete-all TRUE","title":"Problem"},{"location":"intro-to-python/capstone/todo_list/#optional-extras","text":"Expand to multiple lists Have multiple states for a todo list - think something like a jira board Visualize the todo list using ascii art Use different colors for the completion state of the todo ... Use your imagination","title":"Optional Extras"},{"location":"intro-to-python/capstone/web_scraping/","text":"Application - \ud83d\udd78\ufe0f Web scraping \u00a4 Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code Description \u00a4 None","title":"Scraping the web for data"},{"location":"intro-to-python/capstone/web_scraping/#application-web-scraping","text":"Key Info Created date 06/02/2021 None required Mentor Learning resource Capstone template code","title":"Application - \ud83d\udd78\ufe0f Web scraping"},{"location":"intro-to-python/capstone/web_scraping/#description","text":"None","title":"Description"}]}